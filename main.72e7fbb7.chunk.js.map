{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","city","setCity","result","setResult","className","method","onSubmit","e","preventDefault","fetch","then","response","json","data","celcius","main","temp","Math","round","catch","error","console","log","type","name","id","placeholder","onChange","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAsDeA,EApDH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KA4BA,OACE,qBAAKC,UAAU,OAAf,SACE,qBAAKA,UAAU,QAAf,SACE,8BACE,uBAAMC,OAAO,OAAOC,SA5BN,SAACC,GACrBA,EAAEC,iBACFC,MAAM,oDAAD,OACiDT,EADjD,4CAGFU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IACMC,EADSD,EAAKE,KAAKC,KACA,OACzBb,EACE,kBAEEH,EAFF,OAMEiB,KAAKC,MAAMJ,GANb,UAWHK,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAO1B,UACE,uBACEG,KAAK,SACLC,KAAK,SACLC,GAAG,aACHC,YAAY,SACZC,SArCU,SAACpB,GACrBN,EAAQM,EAAEqB,OAAOC,QAqCPA,MAAO7B,IAET,6BAAKE,IACL,uBAAOqB,KAAK,SAASE,GAAG,SAASI,MAAM,qBClCpCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.72e7fbb7.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nconst App = () => {\n  const [city, setCity] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const changeHandler = (e) => {\n    setCity(e.target.value);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=f884d339307760215cba45e56aaaa2d7`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const kelvin = data.main.temp;\n        const celcius = kelvin - 273.15;\n        setResult(\n          \"Temperature at\" +\n            \" \" +\n            city +\n            \" \" +\n            \"is\" +\n            \" \" +\n            Math.round(celcius) +\n            \" \" +\n            \"*C\"\n        );\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"card1\">\n        <div>\n          <form method=\"post\" onSubmit={submitHandler}>\n            <input\n              type=\"search\"\n              name=\"search\"\n              id=\"search-bar\"\n              placeholder=\"search\"\n              onChange={changeHandler}\n              value={city}\n            />\n            <h2>{result}</h2>\n            <input type=\"submit\" id=\"submit\" value=\"submit\" />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}